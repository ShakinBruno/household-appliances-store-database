WITH NEW_COUNTRY AS
(
    INSERT INTO MANAGEMENT.COUNTRY (COUNTRY_NAME, COUNTRY_CODE)
    VALUES      ('SOUTH KOREA', 'SK'),
                ('USA', 'US'),
                ('GERMANY', 'DE'),
                ('JAPAN', 'JP'),
                ('CHINA', 'CN'),
                ('SWEDEN', 'SE')
    ON CONFLICT DO NOTHING
    RETURNING   COUNTRY_ID,
                COUNTRY_NAME
),
NEW_BRAND AS
(
    INSERT INTO MANAGEMENT.BRAND (BRAND_NAME, COUNTRY, FOUNDED_YEAR, WEBSITE)
    SELECT      BRANDS.BRAND_NAME,
                N_COUNT.COUNTRY_ID,
                BRANDS.FOUNDED_YEAR,
                BRANDS.WEBSITE
    FROM        (
                    VALUES  ('SAMSUNG', 'SOUTH KOREA', 1938, 'HTTPS://WWW.SAMSUNG.COM'),
                            ('LG', 'SOUTH KOREA', 1958, 'HTTPS://WWW.LG.COM'),
                            ('WHIRLPOOL', 'USA', 1911, 'HTTPS://WWW.WHIRLPOOL.COM'),
                            ('BOSCH', 'GERMANY', 1886, 'HTTPS://WWW.BOSCH.COM'),
                            ('PANASONIC', 'JAPAN', 1918, 'HTTPS://WWW.PANASONIC.COM'),
                            ('KITCHENAID', 'USA', 1919, 'HTTPS://WWW.KITCHENAID.COM')
                )           AS BRANDS (BRAND_NAME, COUNTRY, FOUNDED_YEAR, WEBSITE)
    INNER JOIN  NEW_COUNTRY AS N_COUNT ON UPPER(BRANDS.COUNTRY) = UPPER(N_COUNT.COUNTRY_NAME)
    WHERE       NOT EXISTS  (
                                SELECT  1
                                FROM    MANAGEMENT.BRAND AS BRAND
                                WHERE   UPPER(BRANDS.BRAND_NAME) = UPPER(BRAND.BRAND_NAME) AND
                                        N_COUNT.COUNTRY_ID = BRAND.COUNTRY
                            )
    RETURNING   BRAND_ID,
                BRAND_NAME
),
NEW_MODEL AS
(
    INSERT INTO MANAGEMENT.MODEL (MODEL_NAME, BRAND, RELEASE_YEAR)
    SELECT      MODELS.MODEL_NAME,
                N_BRAND.BRAND_ID,
                MODELS.RELEASE_YEAR
    FROM        (
                    VALUES  ('QUICKCOOL 5000', 'SAMSUNG', 2022),
                            ('ECOWASH PRO', 'LG', 2023),
                            ('ULTRAFROST', 'WHIRLPOOL', 2021),
                            ('PRECISIONBAKE', 'BOSCH', 2022),
                            ('SILENTCHEF', 'PANASONIC', 2023),
                            ('MASTERMIX ELITE', 'KITCHENAID', 2022)
                ) AS MODELS (MODEL_NAME, BRAND_NAME, RELEASE_YEAR)
    INNER JOIN  NEW_BRAND AS N_BRAND ON UPPER(MODELS.BRAND_NAME) = UPPER(N_BRAND.BRAND_NAME)
    ON CONFLICT DO NOTHING
    RETURNING   MODEL_ID,
                MODEL_NAME
),
NEW_CATEGORY AS
(
    INSERT INTO MANAGEMENT.CATEGORY (CATEGORY_NAME, DESCRIPTION)
    VALUES      ('REFRIGERATORS', 'LARGE COOLING APPLIANCES FOR FOOD STORAGE'),
                ('WASHING MACHINES', 'APPLIANCES FOR CLEANING CLOTHES'),
                ('OVENS', 'COOKING APPLIANCES FOR BAKING AND ROASTING'),
                ('DISHWASHERS', 'AUTOMATED DISH CLEANING APPLIANCES'),
                ('BLENDERS', 'KITCHEN APPLIANCES FOR MIXING AND BLENDING'),
                ('AIR CONDITIONERS', 'CLIMATE CONTROL DEVICES FOR COOLING ROOMS')
    ON CONFLICT DO NOTHING
    RETURNING   CATEGORY_ID,
                CATEGORY_NAME
),
NEW_APPLIANCE AS
(
    INSERT INTO MANAGEMENT.APPLIANCE (PRODUCT_NAME, MODEL, CATEGORY, DESCRIPTION)
    SELECT      APPLIANCES.PRODUCT_NAME,
                N_MODEL.MODEL_ID,
                N_CAT.CATEGORY_ID,
                APPLIANCES.DESCRIPTION
    FROM        (
                    VALUES  ('SAMSUNG FAMILY HUB REFRIGERATOR', 'QUICKCOOL 5000', 'REFRIGERATORS', 'SMART REFRIGERATOR WITH TOUCHSCREEN DISPLAY'),
                            ('LG TURBOWASH WASHING MACHINE', 'ECOWASH PRO', 'WASHING MACHINES', 'HIGH-EFFICIENCY FRONT-LOADING WASHER'),
                            ('WHIRLPOOL SMART FRENCH DOOR REFRIGERATOR', 'ULTRAFROST', 'REFRIGERATORS', 'ENERGY-EFFICIENT COOLING WITH SMART FEATURES'),
                            ('BOSCH SERIES 8 OVEN', 'PRECISIONBAKE', 'OVENS', 'PRECISION COOKING WITH MULTIPLE FUNCTIONS'),
                            ('PANASONIC MICROWAVE OVEN', 'SILENTCHEF', 'OVENS', 'COMPACT AND POWERFUL COOKING SOLUTION'),
                            ('KITCHENAID PROFESSIONAL BLENDER', 'MASTERMIX ELITE', 'BLENDERS', 'HIGH-PERFORMANCE BLENDER FOR PROFESSIONAL KITCHENS')
                ) AS APPLIANCES (PRODUCT_NAME, MODEL_NAME, CATEGORY_NAME, DESCRIPTION)
    INNER JOIN  NEW_MODEL       AS N_MODEL  ON UPPER(APPLIANCES.MODEL_NAME) = UPPER(N_MODEL.MODEL_NAME)
    INNER JOIN  NEW_CATEGORY    AS N_CAT    ON UPPER(APPLIANCES.CATEGORY_NAME) = UPPER(N_CAT.CATEGORY_NAME)
    ON CONFLICT DO NOTHING
    RETURNING   APPLIANCE_ID,
                PRODUCT_NAME
),
NEW_SUPPLIER AS
(
    INSERT INTO MANAGEMENT.SUPPLIER (SUPPLIER_NAME, PHONE_NUMBER, EMAIL)
    SELECT      SUPPLIERS.SUPPLIER_NAME,
                SUPPLIERS.PHONE_NUMBER,
                SUPPLIERS.EMAIL
    FROM        (
                    VALUES  ('GLOBAL ELECTRONICS DISTRIBUTOR', '+1-555-123-4567', 'SALES@GLOBALELECTRONICS.COM'),
                            ('APPLIANCE WORLD WHOLESALE', '+1-555-987-6543', 'CONTACT@APPLIANCEWORLD.COM'),
                            ('TECHSUPPLY INC.', '+1-555-246-8135', 'ORDERS@TECHSUPPLY.COM'),
                            ('RETAIL SOLUTIONS GROUP', '+1-555-369-2580', 'INFO@RETAILSOLUTIONS.COM'),
                            ('NATIONAL APPLIANCE NETWORK', '+1-555-159-7532', 'SALES@NATIONALAPPLIANCE.NET'),
                            ('INTERNATIONAL DEVICE TRADERS', '+1-555-753-9514', 'SUPPORT@INTERNATIONALDEVICES.COM')
                ) AS SUPPLIERS (SUPPLIER_NAME, PHONE_NUMBER, EMAIL)
    WHERE       NOT EXISTS  (
                                SELECT  1
                                FROM    MANAGEMENT.SUPPLIER AS SUPP
                                WHERE   UPPER(SUPPLIERS.SUPPLIER_NAME) = UPPER(SUPP.SUPPLIER_NAME)
                            )
    RETURNING   SUPPLIER_ID,
                SUPPLIER_NAME
),
NEW_APPLIANCE_SUPPLY AS
(
    INSERT INTO MANAGEMENT.APPLIANCE_SUPPLY (APPLIANCE, SUPPLIER, PRICE, STOCK_QUANTITY)
    SELECT      N_APPL.APPLIANCE_ID,
                N_SUPP.SUPPLIER_ID,
                APPLIANCE_SUPPLIES.PRICE,
                APPLIANCE_SUPPLIES.STOCK_QUANTITY
    FROM        (
                    VALUES  ('SAMSUNG FAMILY HUB REFRIGERATOR', 'GLOBAL ELECTRONICS DISTRIBUTOR', 2499.99, 25),
                            ('LG TURBOWASH WASHING MACHINE', 'APPLIANCE WORLD WHOLESALE', 899.99, 40),
                            ('WHIRLPOOL SMART FRENCH DOOR REFRIGERATOR', 'TECHSUPPLY INC.', 2299.99, 15),
                            ('BOSCH SERIES 8 OVEN', 'RETAIL SOLUTIONS GROUP', 1599.99, 20),
                            ('PANASONIC MICROWAVE OVEN', 'NATIONAL APPLIANCE NETWORK', 249.99, 50),
                            ('KITCHENAID PROFESSIONAL BLENDER', 'INTERNATIONAL DEVICE TRADERS', 349.99, 30)
                ) AS APPLIANCE_SUPPLIES (APPLIANCE_NAME, SUPPLIER_NAME, PRICE, STOCK_QUANTITY)
    INNER JOIN  NEW_APPLIANCE   AS N_APPL ON UPPER(APPLIANCE_SUPPLIES.APPLIANCE_NAME) = UPPER(N_APPL.PRODUCT_NAME)
    INNER JOIN  NEW_SUPPLIER    AS N_SUPP ON UPPER(APPLIANCE_SUPPLIES.SUPPLIER_NAME) = UPPER(N_SUPP.SUPPLIER_NAME)
    ON CONFLICT DO NOTHING
),
NEW_CUSTOMER AS
(
    INSERT INTO MANAGEMENT.CUSTOMER (FIRST_NAME, LAST_NAME, PHONE_NUMBER, EMAIL)
    SELECT      CUSTOMERS.FIRST_NAME,
                CUSTOMERS.LAST_NAME,
                CUSTOMERS.PHONE_NUMBER,
                CUSTOMERS.EMAIL
    FROM        (
                    VALUES  ('JOHN', 'SMITH', '+1-555-111-2222', 'JOHN.SMITH@EMAIL.COM'),
                            ('EMILY', 'JOHNSON', '+1-555-333-4444', 'EMILY.J@GMAIL.COM'),
                            ('MICHAEL', 'WILLIAMS', '+1-555-555-6666', 'MICHAEL.W@HOTMAIL.COM'),
                            ('SARAH', 'BROWN', '+1-555-777-8888', 'SARAH.BROWN@YAHOO.COM'),
                            ('DAVID', 'MILLER', '+1-555-999-0000', 'DAVID.MILLER@OUTLOOK.COM'),
                            ('JESSICA', 'DAVIS', '+1-555-222-3333', 'JESSICA.DAVIS@GMAIL.COM')
                ) AS CUSTOMERS (FIRST_NAME, LAST_NAME, PHONE_NUMBER, EMAIL)
    WHERE       NOT EXISTS  (
                                SELECT  1
                                FROM    MANAGEMENT.CUSTOMER AS CUST
                                WHERE   UPPER(CUSTOMERS.FIRST_NAME) = UPPER(CUST.FIRST_NAME) AND
                                        UPPER(CUSTOMERS.LAST_NAME) = UPPER(CUST.LAST_NAME)
                            )
    RETURNING   CUSTOMER_ID,
                FIRST_NAME,
                LAST_NAME
),
NEW_EMPLOYEE AS
(
    INSERT INTO MANAGEMENT.EMPLOYEE (FIRST_NAME, LAST_NAME, PHONE_NUMBER, EMAIL, JOB_POSITION, HIRE_DATE)
    SELECT      EMPLOYEES.FIRST_NAME,
                EMPLOYEES.LAST_NAME,
                EMPLOYEES.PHONE_NUMBER,
                EMPLOYEES.EMAIL,
                EMPLOYEES.JOB_POSITION,
                EMPLOYEES.HIRE_DATE
    FROM        (
                    VALUES  ('ROBERT', 'GARCIA', '+1-555-444-5555', 'ROBERT.GARCIA@COMPANY.COM', 'SALES MANAGER', '2024-07-15'::DATE),
                            ('LISA', 'MARTINEZ', '+1-555-666-7777', 'LISA.MARTINEZ@COMPANY.COM', 'INVENTORY SPECIALIST', '2024-08-01'::DATE),
                            ('KEVIN', 'ANDERSON', '+1-555-888-9999', 'KEVIN.ANDERSON@COMPANY.COM', 'CUSTOMER SERVICE REP', '2024-07-20'::DATE),
                            ('MARIA', 'TAYLOR', '+1-555-123-4567', 'MARIA.TAYLOR@COMPANY.COM', 'STORE MANAGER', '2024-07-10'::DATE),
                            ('THOMAS', 'MOORE', '+1-555-987-6543', 'THOMAS.MOORE@COMPANY.COM', 'TECHNICAL SUPPORT', '2024-08-05'::DATE),
                            ('AMANDA', 'WHITE', '+1-555-246-8135', 'AMANDA.WHITE@COMPANY.COM', 'MARKETING SPECIALIST', '2024-07-25'::DATE)
                ) AS EMPLOYEES (FIRST_NAME, LAST_NAME, PHONE_NUMBER, EMAIL, JOB_POSITION, HIRE_DATE)
    WHERE       NOT EXISTS  (
                                SELECT  1
                                FROM    MANAGEMENT.EMPLOYEE AS EMPL
                                WHERE   UPPER(EMPLOYEES.FIRST_NAME) = UPPER(EMPL.FIRST_NAME) AND
                                        UPPER(EMPLOYEES.LAST_NAME) = UPPER(EMPL.LAST_NAME)
                            )
    RETURNING   EMPLOYEE_ID,
                FIRST_NAME,
                LAST_NAME
),
NEW_APPLIANCE_ORDER AS
(
    INSERT INTO MANAGEMENT.APPLIANCE_ORDER (CUSTOMER, EMPLOYEE, ORDER_DATE, TOTAL_AMOUNT, ORDER_STATUS)
    SELECT      N_CUST.CUSTOMER_ID,
                N_EMPL.EMPLOYEE_ID,
                APPLIANCE_ORDERS.ORDER_DATE,
                APPLIANCE_ORDERS.TOTAL_AMOUNT,
                APPLIANCE_ORDERS.ORDER_STATUS
    FROM        (
                    VALUES  ('JOHN SMITH', 'ROBERT GARCIA', '2024-07-15 10:30:00'::TIMESTAMP, 2499.99, 'PENDING'),
                            ('EMILY JOHNSON', 'KEVIN ANDERSON', '2024-07-16 14:45:00'::TIMESTAMP, 899.99, 'SHIPPED'),
                            ('MICHAEL WILLIAMS', 'LISA MARTINEZ', '2024-07-17 09:15:00'::TIMESTAMP, 2299.99, 'DELIVERED'),
                            ('SARAH BROWN', 'MARIA TAYLOR', '2024-07-18 11:20:00'::TIMESTAMP, 1599.99, 'PENDING'),
                            ('DAVID MILLER', 'THOMAS MOORE', '2024-07-19 15:00:00'::TIMESTAMP, 249.99, 'SHIPPED'),
                            ('JESSICA DAVIS', 'AMANDA WHITE', '2024-07-20 13:40:00'::TIMESTAMP, 349.99, 'DELIVERED')
                ) AS APPLIANCE_ORDERS (CUSTOMER_NAME, EMPLOYEE_NAME, ORDER_DATE, TOTAL_AMOUNT, ORDER_STATUS)
    INNER JOIN  NEW_CUSTOMER AS N_CUST ON UPPER(APPLIANCE_ORDERS.CUSTOMER_NAME) = UPPER(N_CUST.FIRST_NAME || ' ' || N_CUST.LAST_NAME)
    INNER JOIN  NEW_EMPLOYEE AS N_EMPL ON UPPER(APPLIANCE_ORDERS.EMPLOYEE_NAME) = UPPER(N_EMPL.FIRST_NAME || ' ' || N_EMPL.LAST_NAME)
    WHERE       NOT EXISTS  (
                                SELECT  1
                                FROM    MANAGEMENT.APPLIANCE_ORDER AS APP_ORD
                                WHERE   N_CUST.CUSTOMER_ID = APP_ORD.CUSTOMER AND
                                        N_EMPL.EMPLOYEE_ID = APP_ORD.EMPLOYEE
                            )
    RETURNING   APPLIANCE_ORDER_ID,
                ORDER_DATE
)
INSERT INTO MANAGEMENT.ORDER_ITEM (APPLIANCE_ORDER, APPLIANCE, QUANTITY)
SELECT      N_ORD.APPLIANCE_ORDER_ID,
            N_APPL.APPLIANCE_ID,
            ORDER_ITEMS.QUANTITY
FROM        (
                VALUES  ('2024-07-15 10:30:00'::TIMESTAMP, 'SAMSUNG FAMILY HUB REFRIGERATOR', 1),
                        ('2024-07-16 14:45:00'::TIMESTAMP, 'LG TURBOWASH WASHING MACHINE', 1),
                        ('2024-07-17 09:15:00'::TIMESTAMP, 'WHIRLPOOL SMART FRENCH DOOR REFRIGERATOR', 1),
                        ('2024-07-18 11:20:00'::TIMESTAMP, 'BOSCH SERIES 8 OVEN', 1),
                        ('2024-07-19 15:00:00'::TIMESTAMP, 'PANASONIC MICROWAVE OVEN', 1),
                        ('2024-07-20 13:40:00'::TIMESTAMP, 'KITCHENAID PROFESSIONAL BLENDER', 1)
            ) AS ORDER_ITEMS (ORDER_DATE, APPLIANCE_NAME, QUANTITY)
INNER JOIN  NEW_APPLIANCE_ORDER AS N_ORD ON ORDER_ITEMS.ORDER_DATE = N_ORD.ORDER_DATE
INNER JOIN  NEW_APPLIANCE AS N_APPL ON UPPER(ORDER_ITEMS.APPLIANCE_NAME) = UPPER(N_APPL.PRODUCT_NAME)
ON CONFLICT DO NOTHING;